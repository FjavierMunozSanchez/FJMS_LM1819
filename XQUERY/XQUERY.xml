<html>
<body>
<h1>bailes ofertados</h1>
<table style="border: 1px solid black">
<tr>
<th>Nombre</th>
<th>Profesor</th>
<th>Plazas</th>
</tr>


<!--Comandos Básicos-->

for: Bucle

let: Declarar variables

where: Para meter condiciones

order by: para Ordenar

return: devuelve la información.


<!--Consulta en JQUERY-->
<!--En el programa Qizx studio para que la consulta funcione hay que ir al xml y segundo 
    boton en "Use document a Query Domain" -->

<!--Mostrar todos los bailes-->

{
for $baile in //Bailes/baile
let $nombre:=$baile/nombre
let $profesor:=$baile/profesor
let $plazas:=$baile/plazas
return
<tr>
<td>{data($nombre)}</td>
<td>{data($profesor)}</td>
<td>{data($plazas)}</td>
</tr>

}

<!--Mostrar los Bailes con cuotas trimestral y ordenados de menos a mayor por el numero de plazas-->

{
    for $baile in //Bailes/baile
    let $nombre:=$baile/nombre
    let $profesor:=$baile/profesor
    let $plazas:=$baile/plazas

    <!--Para mostrar solo la cuota triemstrarl-->
    where $baile/precio[@cuota="trimestral"]

    <!--Ordenar con order by - descendig y ascending (Predeterminado)-->
    order by $baile/plazas descending

    return
    <tr>
    <td>{data($nombre)}</td>
    <td>{data($profesor)}</td>
    <td>{data($plazas)}</td>
    </tr>
    
    }

</table>
</body>
</html>

<!--Insertar nodo esto inserta información en el XML-->
insert node
<baile id="7">
<nombre>Foxtrot</nombre>
<precio cuota="mensual" moneda="dolares">22</precio>
<plazas>12</plazas>
<comienzo>01/01/2020</comienzo>
<fin>01/03/2020</fin>
<profesor>Freddy</profesor>
<sala>3</sala>
</baile>
before //Bailes/baile[1]
<!--Para ponerlo el primero usar firts y el ultimo se usa last-->
as first into //Bailes

<!--Reemplazar dato - replace-->
<!--[1] Modifica el primer nodo-->
replace value of node //Bailes/baile[1]/profesor
with "Profe"
,
replace value of node //Bailes/baile[1]/plazas
with 200

<!--Hacerlo por el id-->
replace value of node //Bailes/baile[@id=6]/profesor
with "Profesor"
,
replace value of node //Bailes/baile[@id=6]/plazas
with 4000

<!--Borrado del nodo-->

delete node //Bailes/baile[@id=7]

<!--Consultas cruzadas-->

<!--Obtener los titulos de los libros prestados con sus autores y la fecha de inicio 
    y debolución del prestamo ordenados por la fecha de inicio del prestamo-->

for $t in doc("Biblioteca.xml")//libro,
$e in doc("Prestamos.xml")//entrada
where $t/titulo = $e/titulo
order by $e/prestamo/inicio
return

<prestamos>
{$t/titulo, $t/autor/*, $e/prestamo/inicio, $e/prestamo/devolucion}
</prestamos>

<!--Mostrar los titulos de los libros: etiqueta titulo-->

for $tit in //bookstore/book/title/text()
return <titulo>{$tit}</titulo>


<!--Mostrar los libres cuyo precio sea menor o igual 30€-->

for $libro in //bookstore/book
where $libro/price <= 30
return $libro

<!--Otra forma-->

for $libro in //bookstore/book[price<=30]
return $libro

<!--Mostrar el titulo de los libros cuyo precio es menor igual a 30-->
for $libro in //bookstore/book
where $libro/price <= 30
return $libro/title

<!--Otra forma-->

for $libro in //bookstore/book[price<=30]
return $libro/title

<!--Para devolver la información sin los atributos con string() o text()-->

for $libro in //bookstore/book[price<=30]
return <title>{$libro/title/string()}</title>

for $libro in //bookstore/book[price<=30]
return <title>{$libro/title/text()}</title>

<!--http://www.ticarte.com/contenido/ejercicios-practicos-de-xquery-->



<!--Mostrar el título y el autor de los libros del año 2005, y etiquetar cada uno de ellos con "lib2005"-->

for $libro in /bookstore/book
where $libro/year=2005
return 
<lib2005>
<title>{$libro/title/text()}</title>

<author>{$libro/author/text()}</author>

</lib2005>

<!--Mostrar los libros ordenados primero por "category" y luego por "title" en una sola consulta.-->

for $libro in //bookstore/book
order by $libro/@category, $libro/title
return $libro

<!--Mostrar cuántos libros hay, y etiquetarlo con "total". (COUNT)-->

let $cuantos := count(//bookstore/book)
return <total>{$cuantos}</total>


<!--Mostrar los títulos de los libros y al final una etiqueta con el número total de libros.-->

let $total := count(//bookstore/book), 
$titulos := (
  for $libro in //bookstore/book/title
  return <titulo>{$libro/text()}</titulo>)
return 
 <resultado>
 {$titulos}
 <total>{$total}</total>
 </resultado>

 <!--Mostrar el precio mínimo y maximo (max y min)-->
let $min := min(//bookstore/book/price),
$max := max(//bookstore/book/price)

return 
<libro>
<preciomin>{$min}</preciomin>
<preciomax>{$max}</preciomax>
</libro>

<!---->


<!--Mostrar el título y el número de autores que tiene cada libro en etiquetas diferentes-->

for $libro in //bookstore/book
let $c := count ($libro/author)

return
<resultado>
<titulo>{$libro/title/text()}</titulo>
<Numautores>{$c}</Numautores>
</resultado>


for $libros in //boockstore/book
let $cuantos :=count($libros/author)

return

<libro>
<titulo>{$libros/title/text()}</titulo>
<autores>{$cuantos}</autores>
</libro>

<!--Mostrar cada uno de los precios de los libros, y al final una nueva etiqueta con la suma de los precios (Función sum())-->

let $precios := //bookstore/book/price,
$sumaprecios := sum($precios)

return
<listaPrecios>
{$precios}
<precioTotal>{$sumaprecios}</precioTotal>
</listaPrecios>

<!--mostrar en la misma etiqueta el titulo y entre parentesis el numero de autores de ese titulo-->

for $libros in //bookstore/book
let $titulo := $libros/title/text(),
$autores :=  count($libros/author)

return

<Libros> {$titulo} ({$autores}) </Libros>

<!--mOSTRAR los libros escritos en años que terminen en "3" (ENDS-WITH)-->

for $libros in /bookstore/book
where ends-with($libros/year, "3")
return $libros

<!--Mostrar los libros cuya categoría empieza por "C" (starts-with)-->

for $libros in /bookstore/book[starts-with(@category, "C")]
return $libros

<!--Mostrar los libros Que tengan una "P" máyuscula o minuscula en el titulo (Lower-case)-->

for $libros in /bookstore/book
where starts-with($libros/@category, "C")
and contains(lower-case($libros/title), "p")
return $libros

<!--Mostrar el tititulo y el numero de caracteres que tiene cada titulo (String-length)-->

for $libros in /bookstore/book/title/text()
return
<libros>{$libros} : {(string-length($libros))}</libros>











<!--Funciones: https://docs.microsoft.com/es-es/sql/xquery/xquery-functions-against-the-xml-data-type?view=sql-server-2017-->


<!--PREGUNTA 01 XQUERY-->

<!--1. Obtener todos los títulos de los libros cuyo año de publicación sea mayor que 2002 y las páginas sean más de 500-->

for $l in //Biblioteca/libros
where $l/paginas>500
where $l/publicacion > 2002
return $l/titulo



<!--2. Obtener el nombre del lector de todos los libros prestados cuyo año de publicación es el 2003-->

